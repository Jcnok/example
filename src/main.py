# main.py
from site_creator_agent import SiteCreatorAgent
from devops_agent import DevOpsAgent
from dotenv import load_dotenv
import os

def validate_environment():
    required_vars = [
        "AZURE_OPENAI_API_KEY",
        "GITHUB_USERNAME",
        "GITHUB_EMAIL",
        "GITHUB_TOKEN",
        "GITHUB_REPO"
    ]
    missing = [var for var in required_vars if not os.getenv(var)]
    if missing:
        print(f"‚ö†Ô∏è Vari√°veis de ambiente obrigat√≥rias n√£o definidas: {', '.join(missing)}")
        print("Por favor, configure-as no arquivo .env e tente novamente.")
        return False
    return True

def main():
    load_dotenv()
    
    if not validate_environment():
        return
    
    print("üöÄ Iniciando sistema de portf√≥lio automatizado com IA")
    
    # Inicializar agentes
    site_creator = SiteCreatorAgent()
    devops_agent = DevOpsAgent()
    
    # Etapa 1: Criar o site de portf√≥lio
    print("\nüìù Agente Criador de Site em a√ß√£o...")
    site_result = site_creator.run(
        """
            Instru√ß√µes Principais:
            Crie um site portfolio profissional responsivo (inspirado em https://jcnok.github.io/portfolio/) com:
            1. Estrutura HTML Sem√¢ntica:
            Cabe√ßalho Fixo: Com logo (nome do usu√°rio) e menu de navega√ß√£o suave (Home, Projetos, Habilidades, Contato).
            Se√ß√£o Hero:
            Layout em grid (50% texto / 50 por cento imagem) para dispositivos grandes.
            T√≠tulo principal + subt√≠tulo + Call-to-Action ("Ver Projetos").
            Avatar circular com borda gradiente (efeito de brilho suave via CSS).
            Se√ß√£o Projetos:
            Grid responsivo (3 colunas desktop ‚Üí 1 coluna mobile) com cards clic√°veis.
            Cada card deve ter:
            Imagem em destaque (placeholder via https://placehold.co).
            Tags de tecnologia (ex: "React", "Python") com hover effect.
            Overlay din√¢mico (ao clicar, exibir modal com descri√ß√£o via JavaScript).
            Se√ß√£o Contato:
            Formul√°rio com campos (Nome, E-mail, Mensagem) e valida√ß√£o b√°sica (JS).
            Efeito de suaviza√ß√£o ao enviar (ex: loading spinner com CSS animation).
            2. Estiliza√ß√£o CSS Moderna:
            Vari√°veis CSS: Para cores principais (ex: --primary-color: #2ecc71;).
            Design Gradiente: Use gradientes sutis em bot√µes/bordas.
            Anima√ß√µes:
            Fade-in ao rolar a p√°gina (Intersection Observer API).
            Hover em cards com transform: translateY(-5px).
            Mobile-First: Media queries para breakpoints (768px, 1024px).
            3. Funcionalidades JavaScript:
            Scroll Suave: Navega√ß√£o entre se√ß√µes com scrollIntoView({behavior: 'smooth'}).
            Modal Din√¢mico: Exibir detalhes do projeto ao clicar no card (conte√∫do via JSON externo).
            Formul√°rio:
            Preven√ß√£o de comportamento padr√£o.
            Simula√ß√£o de envio com setTimeout() + mensagem de sucesso.
            4. Requisitos T√©cnicos:
            SEO B√°sico: Meta tags (description, keywords) e t√≠tulo otimizado.
            √çcones: Biblioteca Font Awesome para redes sociais (footer fixo).
            Clean Code: C√≥digo comentado e organizado em se√ß√µes.
            5. Personaliza√ß√£o:
            Use placeholders (nome, links, projetos) marcados com [SEU_NOME], [SEU_EMAIL] etc.
            Inclua coment√°rios "// MODIFIQUE AQUI" nas √°reas de personaliza√ß√£o."""
            )
    
    print(f"Resultado do Agente Criador: {site_result}")
    
    # Etapa 2: Configurar Git e GitHub Actions
    print("\nüîß Agente DevOps em a√ß√£o...")
    devops_result = devops_agent.run(
        "Configure um reposit√≥rio Git para este projeto, comite as mudan√ßas e "
        "configure o GitHub Actions para fazer deploy autom√°tico no GitHub Pages "
        "sempre que houver um push para a branch main."
    )
    print(f"Resultado do Agente DevOps: {devops_result}")
    
    print("\n‚úÖ Sistema de portf√≥lio automatizado conclu√≠do com sucesso!")
    print("Seu site est√° pronto e configurado para deploy autom√°tico no GitHub Pages.")
    print(f"Acesse: https://{os.getenv('GITHUB_USERNAME')}.github.io/{os.getenv('GITHUB_REPO')}")

if __name__ == "__main__":
    main()
